# Use the latest 2.1 version of CircleCI pipeline process engine.
# See: https://circleci.com/docs/2.0/configuration-reference
version: 2.1

# Define a job to be invoked later in a workflow.
# See: https://circleci.com/docs/2.0/configuration-reference/#jobs
jobs:
  build:
    # Specify the execution environment. You can specify an image from Dockerhub or use one of our Convenience Images from CircleCI's Developer Hub.
    # See: https://circleci.com/docs/2.0/configuration-reference/#docker-machine-macos-windows-executor
    docker: # run the steps with Docker
      # CircleCI Go images available at: https://hub.docker.com/r/circleci/golang/
      - image: cimg/go:1.17

    environment:
      TEST_RESULTS: /tmp/test-results

    # Add steps to the job
    # See: https://circleci.com/docs/2.0/configuration-reference/#steps
    steps:
      - checkout
      - run: mkdir -p $TEST_RESULTS # create the test results directory

      - run:
          name: Build app
          command: |
            mkdir -p blddir
            env CGO_ENABLED=0 GOOS=linux GOARCH=amd64 go build -o blddir/httpserver .

      - run:
          name: Test functions
          command: go test -v ./...

      - run:
          name: Start service
          command: |
            ls -l ./blddir
            ./blddir/httpserver
          background: true # keep service running and proceed to next step

      - run:
          name: Validate server is working
          command: |
            sleep 5
            curl --retry 10 --retry-delay 1 http://localhost:3000/headers > $TEST_RESULTS/headers.out

      - store_artifacts: # upload test summary for display in Artifacts
          path: /tmp/test-results
          destination: raw-test-output

      - store_test_results: # upload test results for display in Test Summary
          path: /tmp/test-results

# Invoke jobs via workflows
# See: https://circleci.com/docs/2.0/configuration-reference/#workflows
workflows:
 build-httpserver-workflow:
    jobs:
      - build
